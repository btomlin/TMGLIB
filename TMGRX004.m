TMGRX004 ;TMG/kst/Patient medication code; 08/30/17
       ;;1.0;TMG-LIB;**1**;08/30/17
 ;
 ;"~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
 ;"Copyright (c) 08/30/17  Kevin S. Toppenberg MD
 ;"
 ;"This file is part of the TMG LIBRARY, and may only be used in accordence
 ;" to license terms outlined in separate file TMGLICNS.m, which should 
 ;" always be distributed with this file.
 ;"~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--~--
 ;
 ;"=======================================================================
 ;" API -- Public Functions.
 ;"=======================================================================
 ;
 ;"=======================================================================
 ;"PRIVATE API FUNCTIONS
 ;"=======================================================================
 ;"LINE2ARR(ARR,LINE)  -- PARSE LINE INTO AN ARRAY THAT COULD BE REASSEMBLED
 ;"ARR2LINE(ARR,STARTIDX)  -- REASSEMBLE ARRAY, AS CREATED BY LINE2ARR
 ;"ARR2LN2(REF,STARTIDX)   -- REASSEMBLE ARRAY
 ;"GETDICT(ARR,IEN22733)  -- GET A LISTING OF ALL WORDS ASSOCIATED WITH RX
 ;"ADDRFDCT(ARR,REF,IEN22733,TYPE)  -- ADD DICT REF REF  
 ;"CHKPREFX(OUT,LINE)  -- CHECK AND REMOVE PREFIXES (INCLUDING OTC)
 ;"ISPREFIX(OUT,WORD)  -- HANDLE PREFIXES
 ;"FIXARRWS(LINE) -- FIX ARROWs, change alternate forms into standard form  
 ;"XTRCTNTE(OUT,LINE)  -- EXTRACT NOTE
 ;"ISROUTE(WORD)  -- IS WORD A ROUTE?
 ;"ISFREQ(WORD)  -- IS WORD A FREQUENCY?
 ;"ISMODIFR(IEN22733,WORD)  -- IS WORD A RX NAME MODIFIER?  E.g. 'CD'
 ;"WORDINFO(WORD)  -- characterize word
 ;"PEEKNXWD(WORD,LINE,IDX)  -- GET NEXT WORD, just look, doesn't remove from line.
 ;"PUTBKWRD(LINE,WORD)  -- PUT BACK WORD
 ;"WORDLEN(LINE)  -- return length of line, E.G. 'hello-there/world you' as 4 words
 ;"STRIPWD(WORD) -- STRIP PUNCTUATION
 ;"MEDIEN(OUT,NAME,LINE)  -- 
 ;"MATCHDSE(OUT,IEN2273)  -- TRY TO MATCH DOSES TO DATABASE.  
 ;
 ;"=======================================================================
 ;"DEPENDENCIES
 ;"=======================================================================
 ;"Uses:  
 ;"=======================================================================
 ;        
LINE2ARR(ARR,LINE)  ;"PARSE LINE INTO AN ARRAY THAT COULD BE REASSEMBLED
  ;"INPUT:  ARR -- PASS BY REFERENCE.  AN OUT PARAMETER.  format
  ;"           ARR("WORD",1)="LORTAB"
  ;"           ARR("WORD",1,"DIV")=" "
  ;"           ARR("WORD",2)="5/325"
  ;"           ARR("WORD",1,"DIV")=" "
  ;"           ARR("WORD",3)=1
  ;"           ARR("WORD",1,"DIV")=" "
  ;"           ARR("WORD",4)="PO"
  ;"           ARR("WORD",1,"DIV")=" "
  ;"           ARR("WORD",5)="QDAY"
  ;"           ARR("WORD",1,"DIV")=""
  ;"        LINE -- string to parse, e.g. 'LORTAB 5/325 1 PO QDAY'
  NEW IDX,CT,DIV SET CT=0
  FOR IDX=1:1:$$WORDLEN(LINE) DO
  . DO GETNXWRD(.LINE,.WORD)
  . SET CT=CT+1
  . MERGE ARR("WORD",CT)=WORD
  QUIT
  ;
ARR2LINE(ARR,STARTIDX)  ;"REASSEMBLE ARRAY, AS CREATED BY LINE2ARR
  ;"INPUT:  ARR -- PASS BY REFERENCE.  ARRAY AS CREATED BY LINE2ARR
  ;"        STARTIDX -- OPTIONAL.  DEFAULT=0.
  SET STARTIDX=+$GET(STARTIDX)
  NEW RESULT SET RESULT=""
  NEW IDX SET IDX=STARTIDX-0.1
  FOR  SET IDX=$ORDER(ARR("WORD",IDX)) QUIT:IDX'>0  DO
  . NEW WORD MERGE WORD=ARR("WORD",IDX)
  . SET RESULT=RESULT_$GET(WORD)_$GET(WORD("DIV"))
  QUIT RESULT
  ;
ARR2LN2(REF,STARTIDX)   ;"REASSEMBLE ARRAY
  NEW TEMP MERGE TEMP("WORD")=@REF
  QUIT $$ARR2LINE(.TEMP,.STARTIDX)
  ;
GETDICT(ARR,IEN22733)  ;"GET A LISTING OF ALL WORDS ASSOCIATED WITH RX
  ;"INPUT:  ARR -- PASS BY REFERENCE, AN OUT PARAMETER.  FORMAT:
  ;"          ARR(120)="DOSE"
  ;"          ARR("24 HR")="MODIFIER"
  ;"          ARR("CARDIZEM")="BRAND"
  ;"          ARR("CD")="MODIFIER"
  ;"          ARR("DILTAZEM")="ALIAS"
  ;"          ARR("DILTIAZEM")="GENERIC"
  ;"          ARR("ER")="MODIFIER"
  ;"          ARR("LA")="MODIFIER"
  ;"          ARR("SR")="MODIFIER"
  ;"          ARR("XR")="MODIFIER"
  ;"          ARR("ZZIDX","ALIAS","DILTAZEM")="ALIAS"
  ;"          ARR("ZZIDX","BRAND","CARDIZEM")="BRAND"
  ;"          ARR("ZZIDX","DOSE",120)="DOSE"
  ;"          ARR("ZZIDX","GENERIC","DILTIAZEM")="GENERIC"
  ;"          ARR("ZZIDX","MODIFIER","24 HR")="MODIFIER"
  ;"          ARR("ZZIDX","MODIFIER","CD")="MODIFIER"
  ;"          ARR("ZZIDX","MODIFIER","ER")="MODIFIER"
  ;"          ARR("ZZIDX","MODIFIER","LA")="MODIFIER"
  ;"          ARR("ZZIDX","MODIFIER","SR")="MODIFIER"
  ;"          ARR("ZZIDX","MODIFIER","XR")="MODIFIER"
  ;"IEN22733 -- IEN to check
  ;"RESULTS -- NONE
  NEW TEMP,WORD,TYPE,REF
  ;
  SET ARR("ZZIEN",IEN22733)=""
  SET TYPE="DRUG_GENERIC" 
  SET WORD=$PIECE($GET(^TMG(22733,IEN22733,0)),"^",1) SET:WORD'="" TEMP(WORD)=TYPE
  MERGE ARR("ZZIDX",TYPE)=TEMP
  MERGE ARR=TEMP
  ;
  DO ADDRFDCT(.ARR,$NAME(^TMG(22733,IEN22733,.02,"B")),IEN22733,"DRUG_ALIAS")    
  DO ADDRFDCT(.ARR,$NAME(^TMG(22733,IEN22733,1,"B")),IEN22733,"DRUG_BRAND")   
  NEW SUBIEN SET SUBIEN=0
  FOR  SET SUBIEN=$ORDER(^TMG(22733,IEN22733,2,SUBIEN)) QUIT:SUBIEN'>0  DO
  . NEW FORMIEN SET FORMIEN=+$PIECE($GET(^TMG(22733,IEN22733,2,SUBIEN,0)),"^",1)
  . IF FORMIEN>0 DO
  . . NEW FORM SET FORM=$PIECE($GET(^PS(50.606,FORMIEN,0)),"^",1)
  . . IF FORM'="" DO
  . . . SET ARR(FORM)="FORM"
  . . . SET ARR("ZZIDX","FORM",FORM)=""
  . . . SET ARR("ZZLEN",$LENGTH(FORM),FORM)="FORM"
  . NEW DOSEIEN SET DOSEIEN=0
  . FOR  SET DOSEIEN=$ORDER(^TMG(22733,IEN22733,2,SUBIEN,1,DOSEIEN)) QUIT:DOSEIEN'>0  DO
  . . NEW UNITIEN SET UNITIEN=$PIECE($GET(^TMG(22733,IEN22733,2,SUBIEN,1,DOSEIEN,0)),"^",2)
  . . NEW UNIT SET UNIT=$PIECE($GET(^PS(50.607,UNITIEN,0)),"^",1)
  . . IF UNIT'="" DO
  . . . SET ARR(UNIT)="UNIT"
  . . . SET ARR("ZZIDX","UNIT",UNIT)=""
  . . . SET ARR("ZZLEN",$LENGTH(UNIT),UNIT)="UNIT"
  . . DO ADDRFDCT(.ARR,$NAME(^TMG(22733,IEN22733,2,SUBIEN,1,DOSEIEN,1,"B")),IEN22733,"DOSE")    
  . DO ADDRFDCT(.ARR,$NAME(^TMG(22733,IEN22733,2,SUBIEN,1,"B")),IEN22733,"DOSE")    
  . DO ADDRFDCT(.ARR,$NAME(^TMG(22733,IEN22733,2,SUBIEN,2,"B")),IEN22733,"MODIFIER")
  ;
  ;"CHECK FOR FRACTION OR COMBO DOSES (E.G. 20/12.5)
  NEW DOSE SET DOSE=""
  FOR  SET DOSE=$ORDER(ARR("ZZIDX","DOSE",DOSE)) QUIT:DOSE=""  DO
  . IF DOSE'["/" QUIT
  . SET ARR("ZFRACT",DOSE)=""
  . SET ARR(DOSE,"FRACT")=1
  ;
  ;"CHECK IF THIS DRUG HAS INGREDIENTS, IF SO INCLUDE THEM
  NEW IEN SET IEN=0
  FOR  SET IEN=$ORDER(^TMG(22733,IEN22733,.05,"B",IEN)) QUIT:IEN'>0  DO
  . IF $DATA(ARR("ZZIEN",IEN)) QUIT  ;"AVOID RECURSIVE ENDLESS LOOPS
  . NEW TEMPARR DO GETDICT(.TEMPARR,IEN)
  . ;"DELETE PARTS
  . NEW ADOSE SET ADOSE=""
  . FOR  SET ADOSE=$ORDER(TEMPARR("ZZIDX","DOSE",ADOSE)) QUIT:ADOSE=""  DO 
  . . KILL TEMPARR(ADOSE)
  . KILL TEMPARR("ZZIDX","DOSE")
  . MERGE ARR=TEMPARR
  QUIT
  ;
ADDRFDCT(ARR,REF,IEN22733,TYPE)  ;"ADD DICT REF REF  
  NEW TEMP,WORD
  SET WORD="" 
  FOR  SET WORD=$ORDER(@REF@(WORD)) QUIT:WORD=""  DO
  . SET TEMP(WORD)=TYPE
  . SET TEMP("ZZLEN",$LENGTH(WORD),WORD)=TYPE
  MERGE ARR("ZZIDX",TYPE)=TEMP
  MERGE ARR=TEMP
  QUIT
  ;                   
CHKPREFX(OUT,LINE)  ;"CHECK AND REMOVE PREFIXES (INCLUDING OTC)
  IF LINE["OTC " DO
  . SET LINE=$$REPLSTR^TMGSTUT3(LINE,"OTC ","") 
  . SET OUT("OTC")=1
  NEW WORD DO GETNXWRD(.LINE,.WORD)  ;"GET NEXT WORD
  IF '$$ISPREFIX(.OUT,.WORD) DO
  . DO PUTBKWRD(.LINE,.WORD)
  QUIT
  ;  
ISPREFIX(OUT,WORD)  ;"HANDLE PREFIXES
  NEW RESULT SET RESULT=0
  IF ",ADD,ADDED,START,STOP,STOPPED,OFF,HOLD,HOLDING,RESTART,?,"[WORD DO  
  . SET RESULT=1
  . SET OUT("PREFACE")=WORD
  . SET WORD=""
  QUIT RESULT
  ;
FIXARRWS(LINE) ;"FIX ARROWs, change alternate forms into standard form  
  IF LINE[">-----" SET LINE=$$REPLSTR^TMGSTUT3(LINE,">-----","<--")  
  IF LINE[">----" SET LINE=$$REPLSTR^TMGSTUT3(LINE,">----","<--")  
  IF LINE[">---" SET LINE=$$REPLSTR^TMGSTUT3(LINE,">---","<--")  
  IF LINE[">--" SET LINE=$$REPLSTR^TMGSTUT3(LINE,">--","<--")  
  IF LINE["<-----" SET LINE=$$REPLSTR^TMGSTUT3(LINE,"<-----","<--")  
  IF LINE["<----" SET LINE=$$REPLSTR^TMGSTUT3(LINE,"<----","<--")  
  IF LINE["<---" SET LINE=$$REPLSTR^TMGSTUT3(LINE,"<---","<--")  
  IF LINE["----->" SET LINE=$$REPLSTR^TMGSTUT3(LINE,"----->","-->")  
  IF LINE["---->" SET LINE=$$REPLSTR^TMGSTUT3(LINE,"---->","-->")  
  IF LINE["--->" SET LINE=$$REPLSTR^TMGSTUT3(LINE,"--->","-->")
  QUIT
  ;
XTRCTNTE(OUT,LINE)  ;"EXTRACT NOTE
  QUIT:LINE'["<--" 
  SET OUT("NOTE")=$$TRIM^XLFSTR($PIECE(LINE,"<--",2,99))
  SET LINE=$PIECE(LINE,"<--",1)
  QUIT
  ;
ISROUTE(WORD)  ;"IS WORD A ROUTE?
  NEW RESULT SET RESULT=0
  IF (WORD'=""),(",PO,PR,"[WORD) DO
  . SET RESULT=1 
  QUIT RESULT
  ;
ISFREQ(WORD)  ;"IS WORD A FREQUENCY?
  NEW RESULT SET RESULT=0
  IF (WORD'=""),(",QAM,QPM,QDAY,DAILY,BID,TID,QID,QHS,"[WORD) DO
  . SET RESULT=1 
  QUIT RESULT
  ;
ISMODIFR(IEN22733,WORD)  ;"IS WORD A RX NAME MODIFIER?  E.g. 'CD'
  NEW TMGRESULT SET TMGRESULT=0
  NEW IEN22733D02 SET IEN22733D02=0
  FOR  SET IEN22733D02=$ORDER(^TMG(22733,IEN22733,2,IEN22733D02)) QUIT:(IEN22733D02'>0)!(TMGRESULT=1)  DO
  . NEW MOD SET MOD=""
  . FOR  SET MOD=$ORDER(^TMG(22733,IEN22733,2,IEN22733D02,2,"B",MOD)) QUIT:(MOD="")!(TMGRESULT=1)  DO
  . . IF MOD=WORD SET TMGRESULT=1
  QUIT TMGRESULT
  ;
WORDINFO(WORD)  ;"characterize word
  ;"Input: WORD, PASS BY REFERENCE, AND IN AND OUT PARAMETER.  FORMAT
  ;"           WORD = <word to test>
  ;"           WORD("NUM")=# if word starts with number
  ;"           WORD("S2")=
  ;"           WORD("UNIT IEN")=
  NEW SAVE SET SAVE=WORD
  NEW DONE SET DONE=0
  NEW SPEC,EXTRA FOR EXTRA=",",";" IF WORD[EXTRA SET SPEC(EXTRA)=""
  IF $DATA(SPEC) SET WORD=$$REPLACE^XLFSTR(WORD,.SPEC)
  NEW NUM SET NUM=""
  IF WORD?0.1(1"+",1"-").NP1"/".NP DO   ;"Fractions, e.g. 1/2  or -0.4/.4
  . SET NUM=WORD,WORD=""
  ELSE  FOR  QUIT:DONE!(WORD="")  DO
  . NEW CH SET CH=$EXTRACT(WORD,1)
  . IF "-.1234567890"'[CH SET DONE=1 QUIT
  . SET WORD=$EXTRACT(WORD,2,999)
  . SET NUM=NUM_CH
  . IF NUM="0" SET NUM="0 "
  SET WORD("NUM")=NUM
  SET WORD("S2")=WORD
  NEW TEMPWORD SET TEMPWORD=$$STRIPWD(WORD)
  SET WORD("UNIT IEN")=$SELECT(TEMPWORD="":0,1:$ORDER(^PS(50.607,"B",TEMPWORD,0))) 
  ;"CHECK FOR TIME PATTERN, E.G. 8AM
  IF (",AM,PM,"[WORD("S2"))&(WORD("S2")'="") DO
  . NEW TIME SET TIME=WORD("NUM") SET:TIME'="" TIME=TIME_" "
  . SET TIME=TIME_WORD("S2")
  . SET WORD("TIME")=TIME
  SET WORD=SAVE
  QUIT
  ;  
GETNXWRD(LINE,WORD)  ;"GET NEXT WORD
  NEW DIVSET SET DIVSET=" ,./-;:()"
  NEW TEMP,LEN,ST,IDX KILL WORD SET WORD=""
  SET LINE=$GET(LINE) QUIT:LINE=""
  ;"IF DIVSET[$EXTRACT(LINE,1) DO
  ;". SET WORD=$EXTRACT(LINE,1),LINE=$EXTRACT(LINE,2,$LENGTH(LINE))
  ;". SET DIV=WORD
  ;"ELSE  DO
  DO
  . NEW DIV
  . SET WORD=$$NEXTWORD^TMGSTUT3(LINE,DIVSET,.DIV)
  . SET LINE=$PIECE(LINE,DIV,2,99)
  . IF DIV="/",WORD=+WORD DO  ;"Look for fractions, e.g. 1/2
  . . NEW NEXTSPCWORD SET NEXTSPCWORD=$PIECE(LINE," ",1)
  . . IF +NEXTSPCWORD=NEXTSPCWORD DO
  . . . SET WORD=WORD_"/"_NEXTSPCWORD
  . . . SET LINE=$PIECE(LINE," ",2,99),DIV=" "
  . . ;"ELSE  SET LINE=DIV_LINE
  . ;"ELSE  IF ("/-"[DIV)&(DIV'="") DO
  . ;". SET LINE=DIV_LINE
  . SET WORD("DIV")=DIV
  DO WORDINFO(.WORD)  ;"characterize word
  IF ($GET(WORD("NUM"))'=""),($GET(WORD("S2"))'="") DO
  . SET LINE=WORD("S2")_" "_LINE    ;"if we got 81mg, keep 81 and put mg back onto LINE
  . SET WORD("S2")=""  
  QUIT  
  ;  
PEEKNXWD(WORD,LINE,IDX)  ;"GET NEXT WORD, just look, doesn't remove from line.
  ;"INPUT: WORD -- PASS BY REFERNCE, AN OUT PARAMETER
  ;"       LINE -- line to look at
  ;"       IDX -- OPTIONAL, DEFAULT is 1.  If 2, for example, then 2nd next word returned
  ;"Result: none 
  NEW TEMP SET TEMP=LINE
  KILL WORD SET WORD=""
  SET IDX=+$GET(IDX,1) IF IDX'>0 SET IDX=1
  NEW CT FOR CT=1:1:IDX DO
  . DO GETNXWRD(.TEMP,.WORD)
  QUIT
  ;
PUTBKWRD(LINE,WORD)  ;"PUT BACK WORD
  NEW DIV SET DIV=$GET(WORD("DIV"))
  ;"IF ("/-"[DIV)&(DIV'="")&($EXTRACT(LINE,1)=DIV) SET DIV=""
  SET LINE=WORD_DIV_LINE
  QUIT
  ;  
WORDLEN(LINE)  ;"return length of line, E.G. 'hello-there/world you' as 4 words
  NEW TEMPLINE SET TEMPLINE=LINE
  NEW TEMPWORD
  NEW CT SET CT=0
  FOR  QUIT:(TEMPLINE="")  DO
  . DO GETNXWRD(.TEMPLINE,.TEMPWORD) SET CT=CT+1
  QUIT CT
  ;   
STRIPWD(WORD) ;"STRIP PUNCTUATION
  QUIT $TRANSLATE(WORD,",.;:'","")
  ;
MEDIEN(OUT,NAME,LINE)  ;"
  NEW IEN22733 SET IEN22733=0
  IF $GET(NAME)="" GOTO MDINDN
  SET LINE=$GET(LINE)
  NEW NEXTWORD DO PEEKNXWD(.NEXTWORD,LINE)
  SET OUT("TYPE")="?"
  NEW FMIDX FOR FMIDX="B","B2","BRAND" QUIT:IEN22733>0  DO
  . SET IEN22733=$ORDER(^TMG(22733,FMIDX,NAME,0))
  . IF IEN22733'>0 QUIT
  . IF (FMIDX="B")!(FMIDX="B2") DO  QUIT
  . . SET OUT("TYPE")="GENERIC"
  . . IF FMIDX="B2" SET NAME=$PIECE($GET(^TMG(22733,IEN22733,0)),"^",1) ;"change alias generic to proper generic name.  
  . IF FMIDX="BRAND" DO  QUIT
  . . SET OUT("TYPE")="BRAND"
  . . ;"Later, I could change brand alias (possibly mispelled), to preferred brand name
  SET IEN22733=+IEN22733
  IF IEN22733'>0 DO  ;"LOOK FOR PARTIAL MATCHES, E.G. VITAMIN D3
  . NEW DONE SET DONE=0
  . FOR FMIDX="B","B2","BRAND" QUIT:IEN22733>0  DO
  . . NEW TEMP SET TEMP=NAME
  . . FOR  SET TEMP=$ORDER(^TMG(22733,FMIDX,TEMP)) QUIT:(NAME="")!(IEN22733>0)!DONE  DO
  . . . IF $EXTRACT(TEMP,1,$LENGTH(NAME))'=NAME SET DONE=1 QUIT
  . . . IF LINE'[TEMP QUIT
  . . . NEW TEMPWORD SET TEMPWORD=NAME
  . . . NEW IDX FOR IDX=1:1:$LENGTH(LINE," ") DO
  . . . . SET TEMPWORD=TEMPWORD_" "_$PIECE(LINE," ",IDX)
  . . . . IF TEMP'[TEMPWORD SET IDX=999 QUIT
  . . . . IF TEMPWORD=TEMP DO  QUIT
  . . . . . SET IEN22733=$ORDER(^TMG(22733,FMIDX,TEMP,0))
  . . . . . SET IDX=999,NAME=TEMPWORD
  . . . . IF IEN22733>0 DO
  . . . . . IF (FMIDX="B")!(FMIDX="B2") SET OUT("GENERIC")=NAME
  . . . . . ELSE  IF FMIDX="BRAND" SET OUT("BRAND")=NAME
  . SET IEN22733=+IEN22733
  IF IEN22733>0 DO  ;"See if next word is a modifier, e.g. GLUCOTROL XL
  . IF $$ISMODIFR(IEN22733,.NEXTWORD) DO  ;"IS RX NAME MODIFIER?
  . . SET OUT("NAME MODIFIER")=NEXTWORD
  . . DO GETNXWRD(.LINE,.NEXTWORD)  ;"REMOVE NEXTWORD FROM LINE
  ;"ADDED FEATURE, HANDLE COMBO DRUGS, LIKE LISINOPRIL / HCTZ
  IF (IEN22733>0),(NEXTWORD'=""),(",/,-,"[NAME("DIV"))  DO
  . NEW RXCT SET RXCT=1        
  . NEW TEMPRX,DRUGS SET DRUGS(RXCT)=IEN22733  ;"DRUGS array holds IEN's
  . NEW PEEKIDX SET PEEKIDX=1
  . NEW DONE SET DONE=0
  . ;"LOAD ALL COMBO RX INGREDIENTS INTO DRUGS ARRAY
  . FOR  DO PEEKNXWD(.TEMPRX,LINE,PEEKIDX) QUIT:DONE!(TEMPRX="")  DO
  . . NEW TEMPIEN,ARR
  . . SET TEMPIEN=$$MEDIEN(.ARR,.TEMPRX)
  . . IF TEMPIEN'>0 SET DONE=1 QUIT
  . . SET RXCT=RXCT+1,DRUGS(RXCT)=TEMPIEN
  . . IF ",/,-,"'[TEMPRX("DIV") SET DONE=1 QUIT
  . . SET PEEKIDX=PEEKIDX+1
  . ;"Find array of Rx's containing ingredients in DRUGS
  . NEW IDXARR,IDX SET IDX=0
  . FOR  SET IDX=$ORDER(DRUGS(IDX)) QUIT:IDX'>0  DO
  . . NEW IEN SET IEN=$GET(DRUGS(IDX)) QUIT:IEN'>0
  . . NEW SUBIEN SET SUBIEN=0
  . . FOR  SET SUBIEN=$ORDER(^TMG(22733,"AINGRED",IEN,SUBIEN)) QUIT:SUBIEN'>0  DO
  . . . SET IDXARR(SUBIEN)=$GET(IDXARR(SUBIEN))+1
  . . . SET IDXARR(SUBIEN,IEN)=""
  . ;"NOW SEE WHICH RX'S contain the specified ingredients
  . NEW IEN SET IEN=0 SET DONE=0  
  . FOR  SET IEN=$ORDER(IDXARR(IEN)) QUIT:(IEN'>0)!DONE  DO 
  . . IF $GET(IDXARR(IEN))'=RXCT QUIT
  . . ;"Will just use first found match.  Shouldn't be more than one match...
  . . SET IEN22733=IEN
  . . FOR IDX=1:1:PEEKIDX DO
  . . . DO GETNXWRD(.LINE,.NEXTWORD)  ;"cut off Rx words that we have already considered.
MDINDN ;  
  QUIT IEN22733
  ;
MATCHDSE(OUT)  ;"TRY TO MATCH DOSES TO DATABASE.  
  NEW IEN22733 SET IEN22733=+$GET(OUT("IEN22733"))
  NEW FORMIEN SET FORMIEN=0
  FOR  SET FORMIEN=$ORDER(^TMG(22733,IEN22733,2,FORMIEN)) QUIT:FORMIEN'>0  DO
  . NEW IEN50D606 SET IEN50D606=$PIECE($GET(^TMG(22733,IEN22733,2,FORMIEN,0)),"^",1) 
  . NEW FORM SET FORM=$$GET1^DIQ(50.606,IEN50D606,.01)
  . NEW DOSEIEN SET DOSEIEN=0
  . FOR  SET DOSEIEN=$ORDER(^TMG(22733,IEN22733,2,FORMIEN,1,DOSEIEN)) QUIT:DOSEIEN'>0  DO
  . . NEW ADOSE SET ADOSE=$PIECE($GET(^TMG(22733,IEN22733,2,FORMIEN,1,DOSEIEN,0)),"^",1)
  . . IF ADOSE=OUT("DOSE") DO  QUIT
  . . . SET OUT("DOSE IENS",DOSEIEN_","_FORMIEN_","_IEN22733_",")=FORM
  . . NEW AIEN SET AIEN=0
  . . FOR  SET AIEN=$ORDER(^TMG(22733,IEN22733,2,FORMIEN,1,DOSEIEN,1,AIEN)) QUIT:AIEN'>0  DO
  . . . SET ADOSE=$PIECE($GET(^TMG(22733,IEN22733,2,FORMIEN,1,DOSEIEN,1,AIEN,0)),"^",1)
  . . . IF ADOSE=OUT("DOSE") DO  QUIT
  . . . . SET OUT("DOSE IENS",DOSEIEN_","_FORMIEN_","_IEN22733_",")=FORM
  QUIT
  ;